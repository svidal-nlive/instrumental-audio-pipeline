version: '3.8'

services:
  # FastAPI Backend
  backend:
    build: 
      context: ./dashboard-backend
      dockerfile: Dockerfile
    volumes:
      - ./data:/data
      - ./dashboard-backend:/app
    environment:
      - PYTHONPATH=/app
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.instrumental-api.rule=Host(`instrumental-api.vectorhost.net`)"
      - "traefik.http.routers.instrumental-api.entrypoints=websecure"
      - "traefik.http.routers.instrumental-api.tls=true"
      - "traefik.http.routers.instrumental-api.tls.certresolver=le"
      - "traefik.http.services.instrumental-api.loadbalancer.server.port=8000"
      # Optional: Add authentication middleware
      # - "traefik.http.routers.instrumental-api.middlewares=forward-auth"
    networks:
      - web
      - instrumental-network
    restart: unless-stopped

  # Next.js Frontend Dashboard
  frontend:
    build:
      context: ./frontend-dashboard
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=https://instrumental-api.vectorhost.net
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.instrumental.rule=Host(`instrumental.vectorhost.net`)"
      - "traefik.http.routers.instrumental.entrypoints=websecure"
      - "traefik.http.routers.instrumental.tls=true"
      - "traefik.http.routers.instrumental.tls.certresolver=le"
      - "traefik.http.services.instrumental.loadbalancer.server.port=3000"
      # Optional: Add authentication middleware
      # - "traefik.http.routers.instrumental.middlewares=forward-auth"
    networks:
      - web
      - instrumental-network
    restart: unless-stopped

  # Optional: Main Pipeline Service (can be added later)
  # pipeline:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.pipeline
  #   volumes:
  #     - ./data:/app/data
  #   environment:
  #     - PYTHONPATH=/app
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=web"
  #     - "traefik.http.routers.instrumental-pipeline.rule=Host(`instrumental-pipeline.vectorhost.net`)"
  #     - "traefik.http.routers.instrumental-pipeline.entrypoints=websecure"
  #     - "traefik.http.routers.instrumental-pipeline.tls=true"
  #     - "traefik.http.routers.instrumental-pipeline.tls.certresolver=le"
  #     - "traefik.http.services.instrumental-pipeline.loadbalancer.server.port=8000"
  #   networks:
  #     - web
  #     - instrumental-network
  #   restart: unless-stopped

networks:
  web:
    external: true
  instrumental-network:
    driver: bridge

volumes:
  data-volume:
    driver: local
